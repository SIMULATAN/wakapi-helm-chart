apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wakapi.fullname" . }}
  namespace: {{ include "wakapi.namespace" . }}
  labels:
    {{- include "wakapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "wakapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wakapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wakapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "wakapi.fullname" . }}-config-map
          env:
          {{- if .Values.wakapi_config.db.password_secret.enabled }}
            - name: WAKAPI_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.wakapi_config.db.password_secret.name }}
                  key: {{ .Values.wakapi_config.db.password_secret.key }}
          {{- end }}
          {{- if .Values.wakapi_config.mail.smtp.password_secret.enabled }}
            - name: WAKAPI_MAIL_SMTP_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.wakapi_config.mail.smtp.password_secret.name }}
                  key: {{ .Values.wakapi_config.mail.smtp.password_secret.key }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.wakapi_config.server.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "wakapi.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
